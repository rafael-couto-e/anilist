plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id "com.apollographql.apollo"
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "br.eti.rafaelcouto.anilist"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_ENDPOINT", "\"https://graphql.anilist.co\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }
}

//apollo

apollo {
    generateKotlinModels = true
}

//ktlint

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    //kotlin
    ktlint "com.pinterest:ktlint:$versions.ktlint"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "androidx.core:core-ktx:$versions.ktx"

    //general android
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    implementation "com.google.android.material:material:$versions.material"

    //graphql
    implementation "com.apollographql.apollo:apollo-runtime:$versions.graphQl"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$versions.graphQl"

    //picasso
    implementation "com.squareup.picasso:picasso:$versions.picasso"

    //tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"

    //instrumentedTests
    androidTestImplementation "androidx.test.ext:junit:$versions.androidxJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCore"

}